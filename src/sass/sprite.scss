/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$arrow-bottom-hover-name: 'arrow-bottom-hover';
$arrow-bottom-hover-x: 0px;
$arrow-bottom-hover-y: 0px;
$arrow-bottom-hover-offset-x: 0px;
$arrow-bottom-hover-offset-y: 0px;
$arrow-bottom-hover-width: 13px;
$arrow-bottom-hover-height: 8px;
$arrow-bottom-hover-total-width: 387px;
$arrow-bottom-hover-total-height: 19px;
$arrow-bottom-hover-image: '../img/sprite.png';
$arrow-bottom-hover: (0px, 0px, 0px, 0px, 13px, 8px, 387px, 19px, '../img/sprite.png', 'arrow-bottom-hover', );
$arrow-bottom-name: 'arrow-bottom';
$arrow-bottom-x: 99px;
$arrow-bottom-y: 0px;
$arrow-bottom-offset-x: -99px;
$arrow-bottom-offset-y: 0px;
$arrow-bottom-width: 13px;
$arrow-bottom-height: 8px;
$arrow-bottom-total-width: 387px;
$arrow-bottom-total-height: 19px;
$arrow-bottom-image: '../img/sprite.png';
$arrow-bottom: (99px, 0px, -99px, 0px, 13px, 8px, 387px, 19px, '../img/sprite.png', 'arrow-bottom', );
$arrow-top-hover-name: 'arrow-top-hover';
$arrow-top-hover-x: 33px;
$arrow-top-hover-y: 0px;
$arrow-top-hover-offset-x: -33px;
$arrow-top-hover-offset-y: 0px;
$arrow-top-hover-width: 13px;
$arrow-top-hover-height: 8px;
$arrow-top-hover-total-width: 387px;
$arrow-top-hover-total-height: 19px;
$arrow-top-hover-image: '../img/sprite.png';
$arrow-top-hover: (33px, 0px, -33px, 0px, 13px, 8px, 387px, 19px, '../img/sprite.png', 'arrow-top-hover', );
$arrow-top-name: 'arrow-top';
$arrow-top-x: 66px;
$arrow-top-y: 0px;
$arrow-top-offset-x: -66px;
$arrow-top-offset-y: 0px;
$arrow-top-width: 13px;
$arrow-top-height: 8px;
$arrow-top-total-width: 387px;
$arrow-top-total-height: 19px;
$arrow-top-image: '../img/sprite.png';
$arrow-top: (66px, 0px, -66px, 0px, 13px, 8px, 387px, 19px, '../img/sprite.png', 'arrow-top', );
$icon-download-name: 'icon-download';
$icon-download-x: 366px;
$icon-download-y: 0px;
$icon-download-offset-x: -366px;
$icon-download-offset-y: 0px;
$icon-download-width: 21px;
$icon-download-height: 16px;
$icon-download-total-width: 387px;
$icon-download-total-height: 19px;
$icon-download-image: '../img/sprite.png';
$icon-download: (366px, 0px, -366px, 0px, 21px, 16px, 387px, 19px, '../img/sprite.png', 'icon-download', );
$oneoff-hover-name: 'oneoff-hover';
$oneoff-hover-x: 327px;
$oneoff-hover-y: 0px;
$oneoff-hover-offset-x: -327px;
$oneoff-hover-offset-y: 0px;
$oneoff-hover-width: 19px;
$oneoff-hover-height: 19px;
$oneoff-hover-total-width: 387px;
$oneoff-hover-total-height: 19px;
$oneoff-hover-image: '../img/sprite.png';
$oneoff-hover: (327px, 0px, -327px, 0px, 19px, 19px, 387px, 19px, '../img/sprite.png', 'oneoff-hover', );
$oneoff-name: 'oneoff';
$oneoff-x: 210px;
$oneoff-y: 0px;
$oneoff-offset-x: -210px;
$oneoff-offset-y: 0px;
$oneoff-width: 19px;
$oneoff-height: 19px;
$oneoff-total-width: 387px;
$oneoff-total-height: 19px;
$oneoff-image: '../img/sprite.png';
$oneoff: (210px, 0px, -210px, 0px, 19px, 19px, 387px, 19px, '../img/sprite.png', 'oneoff', );
$oneon-name: 'oneon';
$oneon-x: 249px;
$oneon-y: 0px;
$oneon-offset-x: -249px;
$oneon-offset-y: 0px;
$oneon-width: 19px;
$oneon-height: 19px;
$oneon-total-width: 387px;
$oneon-total-height: 19px;
$oneon-image: '../img/sprite.png';
$oneon: (249px, 0px, -249px, 0px, 19px, 19px, 387px, 19px, '../img/sprite.png', 'oneon', );
$tileoff-hover-name: 'tileoff-hover';
$tileoff-hover-x: 288px;
$tileoff-hover-y: 0px;
$tileoff-hover-offset-x: -288px;
$tileoff-hover-offset-y: 0px;
$tileoff-hover-width: 19px;
$tileoff-hover-height: 19px;
$tileoff-hover-total-width: 387px;
$tileoff-hover-total-height: 19px;
$tileoff-hover-image: '../img/sprite.png';
$tileoff-hover: (288px, 0px, -288px, 0px, 19px, 19px, 387px, 19px, '../img/sprite.png', 'tileoff-hover', );
$tileoff-name: 'tileoff';
$tileoff-x: 132px;
$tileoff-y: 0px;
$tileoff-offset-x: -132px;
$tileoff-offset-y: 0px;
$tileoff-width: 19px;
$tileoff-height: 19px;
$tileoff-total-width: 387px;
$tileoff-total-height: 19px;
$tileoff-image: '../img/sprite.png';
$tileoff: (132px, 0px, -132px, 0px, 19px, 19px, 387px, 19px, '../img/sprite.png', 'tileoff', );
$tileon-name: 'tileon';
$tileon-x: 171px;
$tileon-y: 0px;
$tileon-offset-x: -171px;
$tileon-offset-y: 0px;
$tileon-width: 19px;
$tileon-height: 19px;
$tileon-total-width: 387px;
$tileon-total-height: 19px;
$tileon-image: '../img/sprite.png';
$tileon: (171px, 0px, -171px, 0px, 19px, 19px, 387px, 19px, '../img/sprite.png', 'tileon', );
$spritesheet-width: 387px;
$spritesheet-height: 19px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($arrow-bottom-hover, $arrow-bottom, $arrow-top-hover, $arrow-top, $icon-download, $oneoff-hover, $oneoff, $oneon, $tileoff-hover, $tileoff, $tileon, );
$spritesheet: (387px, 19px, '../img/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
